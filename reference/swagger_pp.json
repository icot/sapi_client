{
    "basePath": "/",
    "consumes": [
        "application/json"
    ],
    "definitions": {
        "Export Policy": {
            "properties": {
                "name": {
                    "example": "allow_cluster_x",
                    "minLength": 1,
                    "type": "string"
                },
                "rules": {
                    "items": {
                        "example": "10.10.10.1/24",
                        "minLength": 1,
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Lock": {
            "properties": {
                "host": {
                    "example": "dbthing.cern.ch",
                    "minLength": 1,
                    "type": "string"
                }
            },
            "required": [
                "host"
            ],
            "type": "object"
        },
        "OptionalFromSnapshot": {
            "allOf": [
                {
                    "$ref": "#/definitions/VolumeCreate"
                },
                {
                    "properties": {
                        "from_snapshot": {
                            "description": "The snapshot name to create from/restore",
                            "type": "string"
                        },
                        "from_volume": {
                            "description": "When cloning a volume, use this volume as basis for the snapshot to start from",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "PolicyRule": {
            "properties": {
                "rules": {
                    "items": {
                        "example": "10.10.10.1/24",
                        "minLength": 1,
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Snapshot": {
            "properties": {
                "creation_time": {
                    "format": "date-time",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "size_kbytes": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SnapshotPut": {
            "properties": {
                "purge_old_if_needed": {
                    "description": "If `true`, purge the oldest snapshot iff necessary  to create a new one",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "VolumeCreate": {
            "allOf": [
                {
                    "$ref": "#/definitions/VolumeWrite"
                },
                {
                    "properties": {
                        "aggregate_name": {
                            "description": "If applicable, the aggregate to place the volume in (NetApp only). If not provided, will use the one with the most free space.",
                            "minLength": 1,
                            "type": "string"
                        },
                        "junction_path": {
                            "minLength": 1,
                            "type": "string"
                        },
                        "name": {
                            "description": "The internal name of the volume",
                            "example": "volume_name",
                            "minLength": 1,
                            "type": "string"
                        },
                        "size_total": {
                            "description": "The total size of the volume,  in bytes. If creating, the size of the volume.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "VolumeRead": {
            "allOf": [
                {
                    "$ref": "#/definitions/VolumeCreate"
                },
                {
                    "properties": {
                        "creation_time": {
                            "format": "date-time",
                            "type": "string"
                        },
                        "filer_address": {
                            "minLength": 1,
                            "type": "string"
                        },
                        "percentage_snapshot_reserve_used": {
                            "type": "integer"
                        },
                        "size_used": {
                            "type": "integer"
                        },
                        "state": {
                            "minLength": 1,
                            "type": "string"
                        },
                        "uuid": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "VolumeWrite": {
            "properties": {
                "active_policy_name": {
                    "minLength": 1,
                    "type": "string"
                },
                "autosize_enabled": {
                    "type": "boolean"
                },
                "autosize_increment": {
                    "type": "integer"
                },
                "caching_policy": {
                    "type": "string"
                },
                "compression_enabled": {
                    "type": "boolean"
                },
                "inline_compression": {
                    "type": "boolean"
                },
                "max_autosize": {
                    "type": "integer"
                },
                "percentage_snapshot_reserve": {
                    "type": "integer"
                }
            },
            "type": "object"
        }
    },
    "info": {
        "description": "A unified storage API for all data-storage back-ends.",
        "title": "CERN Unified Storage API",
        "version": "3.3.0"
    },
    "paths": {
        "/conf/me/roles": {
            "get": {
                "description": "List the roles of the current user",
                "operationId": "get_user_roles",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "tags": [
                    "introspect"
                ]
            }
        },
        "/conf/roles": {
            "get": {
                "description": "Get a list of all available roles",
                "operationId": "get_roles",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "tags": [
                    "introspect"
                ]
            }
        },
        "/conf/roles/{role}/am_i_a": {
            "get": {
                "description": "Returns True if the user is the given role, False otherwise",
                "operationId": "get_am_ia",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "tags": [
                    "introspect"
                ]
            },
            "parameters": [
                {
                    "description": "The name of a role, one of USER, ADMIN, UBER_ADMIN.",
                    "in": "path",
                    "name": "role",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/conf/roles/{role}/egroups": {
            "get": {
                "description": "Get a list of all egroups for a given role",
                "operationId": "get_role_egroups",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "tags": [
                    "introspect"
                ]
            },
            "parameters": [
                {
                    "description": "The name of a role, one of USER, ADMIN, UBER_ADMIN.",
                    "in": "path",
                    "name": "role",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/conf/subsystems": {
            "get": {
                "description": "Get a list of all available subsystems",
                "operationId": "get_subsystems",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "tags": [
                    "introspect"
                ]
            }
        },
        "/v3/{subsystem}/export": {
            "get": {
                "description": "Get all ACLs present on the back-end",
                "operationId": "get_all_exports",
                "parameters": [
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The full policy",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Export Policy"
                            },
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Current user is not logged in or not a member of the role 'ADMIN_ROLE'"
                    }
                },
                "security": [
                    {
                        "sso": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "tags": [
                    "sapi"
                ]
            },
            "parameters": [
                {
                    "description": "The subsystem to run the command on.",
                    "in": "path",
                    "name": "subsystem",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/{subsystem}/export/{policy}": {
            "delete": {
                "description": "Delete the entire policy",
                "operationId": "delete_export",
                "responses": {
                    "204": {
                        "description": "Successfully deleted the policy"
                    },
                    "403": {
                        "description": "Current user is not logged in or not a member of the role 'ADMIN_ROLE'"
                    },
                    "404": {
                        "description": "No such policy exists"
                    }
                },
                "security": [
                    {
                        "sso": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "tags": [
                    "sapi"
                ]
            },
            "get": {
                "description": "Display the rules of a given policy",
                "operationId": "get_export",
                "parameters": [
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get the rules of a specific policy",
                        "schema": {
                            "$ref": "#/definitions/Export Policy"
                        }
                    },
                    "403": {
                        "description": "Current user is not logged in or not a member of the role 'ADMIN_ROLE'"
                    }
                },
                "security": [
                    {
                        "sso": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "tags": [
                    "sapi"
                ]
            },
            "parameters": [
                {
                    "description": "The policy to operate on",
                    "in": "path",
                    "name": "policy",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "The subsystem to run the command on.",
                    "in": "path",
                    "name": "subsystem",
                    "required": true,
                    "type": "string"
                }
            ],
            "post": {
                "description": "Grant hosts matching a given pattern access to the given volume",
                "operationId": "post_export",
                "parameters": [
                    {
                        "in": "body",
                        "name": "payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PolicyRule"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The provided access rules were added"
                    },
                    "400": {
                        "description": "A policy with that name already exists"
                    },
                    "403": {
                        "description": "Current user is not logged in or not a member of the role 'ADMIN_ROLE'"
                    }
                },
                "security": [
                    {
                        "sso": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "tags": [
                    "sapi"
                ]
            }
        },
        "/v3/{subsystem}/export/{policy}/rule/{rule}": {
            "delete": {
                "description": "Delete rule from policy",
                "operationId": "delete_export_rule",
                "responses": {
                    "204": {
                        "description": "Successfully deleted the rule, or rule did not exist"
                    },
                    "403": {
                        "description": "Current user is not logged in or not a member of the role 'ADMIN_ROLE'"
                    },
                    "404": {
                        "description": "No such policy exists"
                    }
                },
                "security": [
                    {
                        "sso": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "tags": [
                    "sapi"
                ]
            },
            "parameters": [
                {
                    "description": "The policy rule to operate on",
                    "in": "path",
                    "name": "rule",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "The policy to operate on",
                    "in": "path",
                    "name": "policy",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "The subsystem to run the command on.",
                    "in": "path",
                    "name": "subsystem",
                    "required": true,
                    "type": "string"
                }
            ],
            "put": {
                "description": "Grant hosts matching a given pattern access",
                "operationId": "put_export_rule",
                "responses": {
                    "201": {
                        "description": "The provided access rule was added or already present"
                    },
                    "403": {
                        "description": "Current user is not logged in or not a member of the role 'ADMIN_ROLE'"
                    }
                },
                "security": [
                    {
                        "sso": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "tags": [
                    "sapi"
                ]
            }
        },
        "/v3/{subsystem}/volumes": {
            "get": {
                "description": "Get a list of all volumes",
                "operationId": "get_volumes",
                "parameters": [
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/VolumeRead"
                            },
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Current user is not logged in or not a member of the role 'USER_ROLE'"
                    }
                },
                "security": [
                    {
                        "sso": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "tags": [
                    "sapi"
                ]
            },
            "parameters": [
                {
                    "description": "The subsystem to run the command on.",
                    "in": "path",
                    "name": "subsystem",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/{subsystem}/volumes/{volume_name}": {
            "delete": {
                "description": "Restrict the volume named *volume_name* but do not actually delete it",
                "operationId": "delete_volume",
                "responses": {
                    "204": {
                        "description": "Successfully restricted"
                    },
                    "403": {
                        "description": "Current user is not logged in or not a member of the role 'UBER_ADMIN_ROLE'"
                    }
                },
                "security": [
                    {
                        "sso": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "tags": [
                    "sapi"
                ]
            },
            "get": {
                "description": "Get a specific volume by name",
                "operationId": "get_volume",
                "parameters": [
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The volume named volume_name",
                        "schema": {
                            "$ref": "#/definitions/VolumeRead"
                        }
                    },
                    "201": {
                        "description": "A new volume was created"
                    },
                    "403": {
                        "description": "Current user is not logged in or not a member of the role 'USER_ROLE'"
                    },
                    "404": {
                        "description": "No such volume exists"
                    }
                },
                "security": [
                    {
                        "sso": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "tags": [
                    "sapi"
                ]
            },
            "parameters": [
                {
                    "description": "The name of the volume. Must not contain leading /. On NetApp back-ends, this may either be the name of a volume, or node_name:/junction/path.",
                    "in": "path",
                    "name": "volume_name",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "The subsystem to run the command on.",
                    "in": "path",
                    "name": "subsystem",
                    "required": true,
                    "type": "string"
                }
            ],
            "patch": {
                "description": "Partially update volume_name",
                "operationId": "patch_volume",
                "parameters": [
                    {
                        "in": "body",
                        "name": "payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VolumeWrite"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Current user is not logged in or not a member of the role 'UBER_ADMIN_ROLE'"
                    }
                },
                "security": [
                    {
                        "sso": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "tags": [
                    "sapi"
                ]
            },
            "post": {
                "description": "Create a new volume with the given details.  If `from_snapshot` is a snapshot and `volume_name` already refers to an existing volume, roll back that volume to that snapshot. If `from_snapshot` is a snapshot, `from_volume` is an existing volume and `volume_name` doesn't already exist, create a clone of `from_volume` named `volume_name`, in the state at `from_snapshot`.",
                "operationId": "post_volume",
                "parameters": [
                    {
                        "in": "body",
                        "name": "payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OptionalFromSnapshot"
                        }
                    },
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The newly created volume (if created), otherwise nothing",
                        "schema": {
                            "$ref": "#/definitions/VolumeRead"
                        }
                    },
                    "403": {
                        "description": "Current user is not logged in or not a member of the role 'ADMIN_ROLE'"
                    }
                },
                "security": [
                    {
                        "sso": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "tags": [
                    "sapi"
                ]
            }
        },
        "/v3/{subsystem}/volumes/{volume_name}/locks": {
            "get": {
                "description": "Get the host locking the volume, if any",
                "operationId": "get_all_locks",
                "parameters": [
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An empty list (if no locks were held) or a single dict describing the host holding the lock",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Lock"
                            },
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Current user is not logged in or not a member of the role 'USER_ROLE'"
                    }
                },
                "security": [
                    {
                        "sso": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "tags": [
                    "sapi"
                ]
            },
            "parameters": [
                {
                    "description": "The name of the volume. Must not contain leading /. On NetApp back-ends, this may either be the name of a volume, or node_name:/junction/path.",
                    "in": "path",
                    "name": "volume_name",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "The subsystem to run the command on.",
                    "in": "path",
                    "name": "subsystem",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/{subsystem}/volumes/{volume_name}/locks/{host}": {
            "delete": {
                "description": "Force the lock for the host",
                "operationId": "delete_locks",
                "responses": {
                    "204": {
                        "description": "Lock successfully forced"
                    },
                    "403": {
                        "description": "Current user is not logged in or not a member of the role 'UBER_ADMIN_ROLE'"
                    }
                },
                "security": [
                    {
                        "sso": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "tags": [
                    "sapi"
                ]
            },
            "parameters": [
                {
                    "description": "the host holding the lock in question",
                    "in": "path",
                    "name": "host",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "The name of the volume. Must not contain leading /. On NetApp back-ends, this may either be the name of a volume, or node_name:/junction/path.",
                    "in": "path",
                    "name": "volume_name",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "The subsystem to run the command on.",
                    "in": "path",
                    "name": "subsystem",
                    "required": true,
                    "type": "string"
                }
            ],
            "put": {
                "description": "Lock the volume with host holding the lock",
                "operationId": "put_locks",
                "responses": {
                    "201": {
                        "description": "A new lock was added"
                    },
                    "403": {
                        "description": "Current user is not logged in or not a member of the role 'ADMIN_ROLE'"
                    }
                },
                "security": [
                    {
                        "sso": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "tags": [
                    "sapi"
                ]
            }
        },
        "/v3/{subsystem}/volumes/{volume_name}/snapshots": {
            "get": {
                "operationId": "get_all_snapshots",
                "parameters": [
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All snapshots for the volume",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Snapshot"
                            },
                            "type": "array"
                        }
                    }
                },
                "tags": [
                    "sapi"
                ]
            },
            "parameters": [
                {
                    "description": "The name of the volume. Must not contain leading /. On NetApp back-ends, this may either be the name of a volume, or node_name:/junction/path.",
                    "in": "path",
                    "name": "volume_name",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "The subsystem to run the command on.",
                    "in": "path",
                    "name": "subsystem",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/{subsystem}/volumes/{volume_name}/snapshots/{snapshot_name}": {
            "delete": {
                "description": "Delete the snapshot",
                "operationId": "delete_snapshots",
                "responses": {
                    "204": {
                        "description": "Successfully deleted"
                    },
                    "403": {
                        "description": "Current user is not logged in or not a member of the role 'ADMIN_ROLE'"
                    },
                    "404": {
                        "description": "No such snapshot"
                    }
                },
                "security": [
                    {
                        "sso": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "tags": [
                    "sapi"
                ]
            },
            "get": {
                "description": "Get the current information for a given snapshot",
                "operationId": "get_snapshots",
                "parameters": [
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Snapshot"
                        }
                    }
                },
                "tags": [
                    "sapi"
                ]
            },
            "parameters": [
                {
                    "description": "The snapshot name",
                    "in": "path",
                    "name": "snapshot_name",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "The name of the volume. Must not contain leading /. On NetApp back-ends, this may either be the name of a volume, or node_name:/junction/path.",
                    "in": "path",
                    "name": "volume_name",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "The subsystem to run the command on.",
                    "in": "path",
                    "name": "subsystem",
                    "required": true,
                    "type": "string"
                }
            ],
            "post": {
                "description": "Create a new snapshot of *volume_name* under *snapshot_name*",
                "operationId": "post_snapshots",
                "parameters": [
                    {
                        "in": "body",
                        "name": "payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SnapshotPut"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created a snapshot"
                    },
                    "409": {
                        "description": "Too many snapshots, cannot create another. Try `purge_old_if_needed=true`."
                    }
                },
                "tags": [
                    "sapi"
                ]
            }
        }
    },
    "produces": [
        "application/json"
    ],
    "responses": {
        "APIError": {
            "description": "Return the error message from the filer and 500 status code"
        },
        "MaskError": {
            "description": "When any error occurs on mask"
        },
        "ParseError": {
            "description": "When a mask can't be parsed"
        }
    },
    "securityDefinitions": {
        "sso": {
            "authorizationUrl": "https://it-db-storage-api.web.cern.ch/login",
            "flow": "implicit",
            "type": "oauth2",
            "scopes": {
              "write": "Creation/Destruction operations",
              "read": "Safe RO operations"
            }
        }
    },
    "swagger": "2.0",
    "tags": [
        {
            "description": "Default namespace",
            "name": "default"
        },
        {
            "description": "Storage operations",
            "name": "sapi"
        },
        {
            "description": "API configuration introspection",
            "name": "introspect"
        }
    ]
}
